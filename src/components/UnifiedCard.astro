---
export interface Props {
  mode: 'overview' | 'detailed';
  title: string;
  description: string;
  image?: string;
  stack?: string[];
  source?: string;
  demo?: string;
  // detailed only
  task?: string;
  approach?: string;
  technologies?: string[];
  result?: string;
  roles?: string[];
  slot?: string;
}
const { mode, title, description, image, stack = [], source, demo, task, approach, technologies = [], result, roles = [], slot } = Astro.props;
let showImage = true;
if (image) {
  showImage = false;
}
---
<article class="modern-project-card unified-card reveal" slot={slot}>
  {image && (
    <div class="project-image-wrapper" style="display:none" id={`imgwrap-${title.replace(/\s+/g, '-')}`}> 
      <div class="aspect-video relative w-full overflow-hidden rounded-xl group cursor-pointer" data-modal-image-trigger tabindex="0" aria-label="Open image in full size" role="button" data-modal-image-src={image} data-modal-image-alt={`Screenshot of ${title}`}> 
        <img 
          src={image} 
          alt={`Screenshot of ${title}`}
          class="project-image w-full h-full object-cover object-center transition-transform duration-500 group-hover:scale-105"
          loading="lazy"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-background/80 to-transparent opacity-0 group-hover:opacity-20 transition-opacity duration-300 pointer-events-none"></div>
        <span class="absolute bottom-2 right-2 bg-black/60 text-white text-xs px-2 py-1 rounded shadow-md z-10">Click to enlarge</span>
      </div>
    </div>
  )}
  <div class="flex flex-col flex-grow p-0 md:p-2">
    <h3 class="project-title">{title}</h3>
    <p class="project-desc">{description}</p>
    {(mode === 'overview' ? stack : technologies).length > 0 && (
      <div class="project-stack-modern">
        {(mode === 'overview' ? stack : technologies).map(tech => (
          <span class="stack-badge text-gray-400">
            {tech === 'HTML' && <i class="fa-brands fa-html5 text-[#E34F26]"></i>}
            {tech === 'PWA' && <i class="fa-solid fa-mobile-screen-button text-[#5A0FC8]"></i>}
            {tech === 'JavaScript' && <i class="fa-brands fa-js text-[#F7DF1E]"></i>}
            {tech === 'CSS' && <i class="fa-brands fa-css3-alt text-[#1572B6]"></i>}
            {tech === 'React' && <i class="fa-brands fa-react text-[#61DAFB]"></i>}
            {tech === 'Astro' && <i class="fa-solid fa-star text-[#FF5D01]"></i>}
            {tech === 'Tailwind CSS' && <i class="fa-solid fa-wind text-[#06B6D4]"></i>}
            {tech === 'Node.js' && <i class="fa-brands fa-node-js text-[#43853d]"></i>}
            {tech === 'TypeScript' && <i class="fa-brands fa-js text-[#3178c6]"></i>}
            {tech === 'Local Storage' && <i class="fa-solid fa-database text-[#a3a3a3]"></i>}
            {tech === 'Service Workers' && <i class="fa-solid fa-gears text-[#a3a3a3]"></i>}
            {tech === 'CSS Animations' && <i class="fa-solid fa-film text-[#a3a3a3]"></i>}
            {tech === 'Font Awesome Icons' && <i class="fa-solid fa-icons text-[#a3a3a3]"></i>}
            <span>{tech}</span>
          </span>
        ))}
      </div>
    )}
    {mode === 'detailed' && (
      <>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 w-full mb-4">
          <div class="space-y-6">
            <div class="bg-background/60 rounded-lg p-4">
              <h4 class="text-lg font-bold mb-3 text-text flex items-center gap-2">
                <i class="fa-solid fa-bullseye text-accent"></i>
                Task
              </h4>
              <p class="text-text-muted text-sm leading-relaxed">{task}</p>
            </div>
            <div class="bg-background/60 rounded-lg p-4">
              <h4 class="text-lg font-bold mb-3 text-text flex items-center gap-2">
                <i class="fa-solid fa-route text-accent"></i>
                Approach
              </h4>
              <p class="text-text-muted text-sm leading-relaxed">{approach}</p>
            </div>
          </div>
          <div class="space-y-6">
            <div class="bg-background/60 rounded-lg p-4">
              <h4 class="text-lg font-bold mb-3 text-text flex items-center gap-2">
                <i class="fa-solid fa-microchip text-accent"></i>
                Technologies
              </h4>
              <div class="project-stack-modern">
                {technologies.map(tech => (
                  <span class="stack-badge text-gray-400">
                    {tech === 'HTML' && <i class="fa-brands fa-html5 text-[#E34F26]"></i>}
                    {tech === 'PWA' && <i class="fa-solid fa-mobile-screen-button text-[#5A0FC8]"></i>}
                    {tech === 'JavaScript' && <i class="fa-brands fa-js text-[#F7DF1E]"></i>}
                    {tech === 'CSS' && <i class="fa-brands fa-css3-alt text-[#1572B6]"></i>}
                    {tech === 'React' && <i class="fa-brands fa-react text-[#61DAFB]"></i>}
                    {tech === 'Astro' && <i class="fa-solid fa-star text-[#FF5D01]"></i>}
                    {tech === 'Tailwind CSS' && <i class="fa-solid fa-wind text-[#06B6D4]"></i>}
                    {tech === 'Node.js' && <i class="fa-brands fa-node-js text-[#43853d]"></i>}
                    {tech === 'TypeScript' && <i class="fa-brands fa-js text-[#3178c6]"></i>}
                    {tech === 'Local Storage' && <i class="fa-solid fa-database text-[#a3a3a3]"></i>}
                    {tech === 'Service Workers' && <i class="fa-solid fa-gears text-[#a3a3a3]"></i>}
                    {tech === 'CSS Animations' && <i class="fa-solid fa-film text-[#a3a3a3]"></i>}
                    {tech === 'Font Awesome Icons' && <i class="fa-solid fa-icons text-[#a3a3a3]"></i>}
                    <span>{tech}</span>
                  </span>
                ))}
              </div>
            </div>
            <div class="bg-background/60 rounded-lg p-4">
              <h4 class="text-lg font-bold mb-3 text-text flex items-center gap-2">
                <i class="fa-solid fa-chart-line text-accent"></i>
                Result
              </h4>
              <p class="text-text-muted text-sm leading-relaxed">{result}</p>
            </div>
          </div>
        </div>
        <div class="w-full mt-2 bg-background/60 rounded-lg p-4 mb-4">
          <h4 class="text-lg font-bold mb-3 text-text flex items-center gap-2">
            <i class="fa-solid fa-user-gear text-accent"></i>
            My Roles & Contributions
          </h4>
          <ul class="list-disc list-inside text-text-muted text-sm space-y-1">
            {roles.map(role => (
              <li>{role}</li>
            ))}
          </ul>
        </div>
      </>
    )}
    <div class="flex gap-3 mt-auto">
      {source && source !== "#" && source !== "" && (
        <a href={source} target="_blank" rel="noopener" role="button" aria-label="View source code on GitHub" class="project-link-modern">
          <i class="fa-brands fa-github"></i> <span>Source</span>
        </a>
      )}
      {demo && demo !== "" && (
        <a href={demo} target="_blank" rel="noopener" role="button" aria-label="View live demo" class="project-link-modern">
          <i class="fa-solid fa-arrow-up-right-from-square"></i> <span>Live Demo</span>
        </a>
      )}
    </div>
  </div>
</article>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Динамічна перевірка наявності зображення
    const imgWrappers = document.querySelectorAll('.project-image-wrapper');
    imgWrappers.forEach(wrapper => {
      const parent = wrapper.parentElement;
      const imgTag = parent.querySelector('img');
      if (!imgTag) return;
      const testImg = new window.Image();
      testImg.onload = function() {
        wrapper.style.display = '';
      };
      testImg.onerror = function() {
        wrapper.style.display = 'none';
      };
      testImg.src = imgTag.src;
    });
    // Create modal once and append to body
    if (!document.getElementById('global-image-modal')) {
      const modal = document.createElement('div');
      modal.id = 'global-image-modal';
      modal.innerHTML = `
        <div class="modal-backdrop" style="display:none;">
          <div class="modal-content">
            <img src="" alt="" class="modal-img" />
            <div class="modal-hint">Click outside the image to close</div>
          </div>
        </div>
      `;
      document.body.appendChild(modal);
      // Add styles if not present
      if (!document.getElementById('modal-image-style')) {
        const style = document.createElement('style');
        style.id = 'modal-image-style';
        style.textContent = `
        .modal-backdrop { position: fixed; inset: 0; background: rgba(10,18,30,0.85); z-index: 1000; display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity 0.2s; }
        .modal-backdrop.active { opacity: 1; }
        .modal-content { position: relative; max-width: 96vw; max-height: 96vh; background: transparent; border-radius: 1rem; box-shadow: 0 8px 40px 0 rgba(0,0,0,0.45); display: flex; flex-direction: column; align-items: center; }
        .modal-img { max-width: 90vw; max-height: 80vh; border-radius: 1rem; box-shadow: 0 4px 32px 0 rgba(0,0,0,0.25); background: #232b3a; }
        .modal-hint { color: #e3e8eecc; font-size: 1rem; margin-top: 1.2rem; text-align: center; font-family: inherit; letter-spacing: 0.01em; text-shadow: 0 2px 8px #232b3a; }
        @media (max-width: 600px) { .modal-img { max-width: 98vw; max-height: 60vh; } .modal-hint { font-size: 0.95rem; margin-top: 0.7rem; } }
        `;
        document.head.appendChild(style);
      }
    }
    // Modal logic
    const triggers = document.querySelectorAll('[data-modal-image-trigger]');
    const modal = document.getElementById('global-image-modal');
    if (!modal) return;
    const backdrop = modal.querySelector('.modal-backdrop');
    const modalImg = modal.querySelector('.modal-img');
    triggers.forEach(trigger => {
      trigger.addEventListener('click', function() {
        const src = trigger.getAttribute('data-modal-image-src');
        const alt = trigger.getAttribute('data-modal-image-alt');
        modalImg.src = src;
        modalImg.alt = alt;
        backdrop.style.display = 'flex';
        setTimeout(() => { backdrop.classList.add('active'); }, 10);
        document.body.style.overflow = 'hidden';
      });
      trigger.addEventListener('keydown', function(e) { if (e.key === 'Enter' || e.key === ' ') { trigger.click(); }});
    });
    function closeModal() {
      backdrop.classList.remove('active');
      setTimeout(() => { backdrop.style.display = 'none'; document.body.style.overflow = ''; modalImg.src = ''; }, 200);
    }
    backdrop.addEventListener('click', function(e) { if (e.target === backdrop) closeModal(); });
    document.addEventListener('keydown', function(e) { if (backdrop.style.display === 'flex' && e.key === 'Escape') closeModal(); });
  });
</script>

<style>
/* Сюди можна додати додаткові стилі, якщо потрібно */
</style> 